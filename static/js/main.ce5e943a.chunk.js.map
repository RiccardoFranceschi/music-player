{"version":3,"sources":["components/Player.js","components/Song.js","components/LibrarySong.js","components/Library.js","components/Nav.js","data.js","App.js","reportWebVitals.js","index.js"],"names":["Player","audioRef","currentSong","isPlaying","setIsPlaying","setSongInfo","songInfo","songs","setCurrentSong","setSongs","activeLibraryHandler","nextPrev","newSongs","map","song","id","active","getTime","time","Math","floor","slice","skipTrackHandler","direction","a","currentIndex","findIndex","length","current","play","trackAnim","transform","animationPercentage","className","currentTime","style","background","color","min","max","duration","value","onChange","e","target","type","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","Song","alt","name","src","cover","artist","LibrarySong","songSelectHandler","selectedSong","filter","state","Library","libraryStatus","Nav","setLibraryStatus","faMusic","chillHop","audio","uuidv4","App","useRef","useState","data","timeUpdateHandler","roundedCurrent","round","roundedDuration","animation","songEndHandler","onTimeUpdate","onLoadedMetadata","ref","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce5e943a.chunk.js","sourcesContent":["import React from 'react';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport { faPlay, faAngleLeft, faAngleRight, faPause} from \"@fortawesome/free-solid-svg-icons\"\r\n\r\n\r\nconst Player = ({audioRef, currentSong, isPlaying, setIsPlaying, setSongInfo, songInfo, songs, setCurrentSong, setSongs}) => {\r\n    const activeLibraryHandler = (nextPrev) => {\r\n        const newSongs = songs.map((song) => {\r\n            if (song.id === nextPrev.id){\r\n             return {\r\n              ...song, active: true,\r\n             };\r\n            } else {\r\n                return {\r\n                    ...song, active: false,\r\n                }\r\n            }\r\n        });\r\n        setSongs(newSongs);\r\n    }\r\n    \r\n    // event handlers\r\n    const playSongHandler = () => {\r\n        if (isPlaying) {\r\n            audioRef.current.pause();\r\n            setIsPlaying(!isPlaying)\r\n        } else {\r\n            audioRef.current.play();\r\n            setIsPlaying(!isPlaying)\r\n        }\r\n    }\r\n\r\n\r\n    const getTime = (time) => {\r\n       return (\r\n       Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n       );\r\n    }\r\n\r\n    const dragHandler = (e) => {\r\n        audioRef.current.currentTime = e.target.value\r\n        setSongInfo({...songInfo, currentTime: e.target.value });\r\n    }\r\n    const skipTrackHandler = async (direction) => {\r\n       let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n       if(direction === \"skip-forward\") {\r\n         await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n         activeLibraryHandler(songs[(currentIndex + 1) % songs.length])\r\n       } \r\n       if (direction === \"skip-back\") {\r\n           if ((currentIndex - 1) % songs.length === -1) {\r\n               await setCurrentSong(songs[songs.length - 1]);\r\n               activeLibraryHandler(songs[songs.length - 1]);\r\n               if(isPlaying) audioRef.current.play();\r\n               return;\r\n           }\r\n        setCurrentSong(songs[(currentIndex - 1) % songs.length]);\r\n        activeLibraryHandler(songs[(currentIndex - 1) % songs.length])\r\n       }\r\n       if(isPlaying) audioRef.current.play();\r\n    };\r\n    // Add styles\r\n    const trackAnim = {\r\n        transform: `translateX(${songInfo.animationPercentage}%)`\r\n    }\r\n\r\n    return (\r\n       <div className=\"player\">\r\n           <div className=\"time-control\">\r\n               <p>{getTime(songInfo.currentTime)}</p>\r\n               <div style={{background: `linear-gradient(to right, ${currentSong.color[0]},${currentSong.color[1]})`}} className=\"track\">\r\n                <input\r\n                    min={0}\r\n                    max={songInfo.duration || 0}\r\n                    value={songInfo.currentTime}\r\n                    onChange={dragHandler}\r\n                    type=\"range\"\r\n                    />\r\n                  <div style={trackAnim} className=\"animate-track\"></div>  \r\n                </div>\r\n                \r\n               <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\r\n           </div>\r\n           <div className=\"play-control\">\r\n               <FontAwesomeIcon \r\n               onClick={() => skipTrackHandler('skip-back')}\r\n               className=\"skip-back\" \r\n               size=\"2x\" \r\n               icon={faAngleLeft} \r\n               />\r\n               <FontAwesomeIcon \r\n               onClick={playSongHandler} \r\n               className=\"play\" \r\n               size=\"2x\" \r\n               icon={isPlaying ? faPause : faPlay} \r\n               />\r\n               <FontAwesomeIcon \r\n               onClick={() => skipTrackHandler('skip-forward')}\r\n               className=\"skip-forward\" \r\n               size=\"2x\" \r\n               icon={faAngleRight} \r\n               />\r\n           </div>\r\n           \r\n       </div>\r\n    )\r\n}\r\n\r\nexport default Player;","import React from 'react';\r\n\r\nconst Song = ({currentSong, isPlaying}) => {\r\n    return (\r\n       <div className=\"song-container\">\r\n           <img className={isPlaying ? \"song-playing\" : \"\"} alt={currentSong.name} src={currentSong.cover} alt=\"\"/>\r\n           <h2>{currentSong.name}</h2>\r\n           <h3>{currentSong.artist}</h3>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default Song;","import React from 'react';\r\n\r\nconst LibrarySong = ({ song, songs, setCurrentSong, id, audioRef, isPlaying, setSongs }) => {\r\n    const songSelectHandler = async () => {\r\n        const selectedSong = songs.filter((state) => state.id === id)\r\n        await setCurrentSong(selectedSong[0]);\r\n        // Add Active State\r\n        const newSongs = songs.map((song) => {\r\n            if (song.id === id){\r\n             return {\r\n              ...song, active: true,\r\n             };\r\n            } else {\r\n                return {\r\n                    ...song, active: false,\r\n                }\r\n            }\r\n        });\r\n        setSongs(newSongs);\r\n        // check if the song is playing\r\n        if(isPlaying) audioRef.current.play();\r\n    }\r\n    return (\r\n       <div onClick={songSelectHandler} className={`library-song ${song.active ? 'selected' : \"\"}`}>\r\n           <img alt={song.name} src={song.cover} alt=\"\"/>\r\n           <div className=\"song-description\">\r\n            <h3>{song.name}</h3>\r\n            <h4>{song.artist}</h4>\r\n           </div>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default LibrarySong;","import React from \"react\";\r\nimport LibrarySong from \"./LibrarySong\"\r\n\r\n\r\nconst Library = ({ songs, setCurrentSong, audioRef, isPlaying, setSongs, libraryStatus }) => {\r\n    return (\r\n        <div className={`library ${libraryStatus ? 'active-library' : \"\"}`}>\r\n            <h2>Library</h2>\r\n            <div className=\"library-songs\">\r\n              {songs.map((song) => (\r\n                  <LibrarySong\r\n                  songs={songs}\r\n                  song={song} \r\n                  setCurrentSong={setCurrentSong}\r\n                  id={song.id}\r\n                  key={song.id}\r\n                  audioRef={audioRef}\r\n                  isPlaying={isPlaying}\r\n                  setSongs={setSongs} />\r\n              ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Library;","import React from 'react';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\"\r\n\r\nconst Nav = ({setLibraryStatus, libraryStatus}) => {\r\n    return (\r\n        <nav>\r\n            <h1>RickDev Player</h1>\r\n            <button onClick={() => setLibraryStatus(!libraryStatus)}>\r\n                Library\r\n                <FontAwesomeIcon icon={faMusic} />\r\n            </button>\r\n        </nav>\r\n    )\r\n}\r\n\r\n\r\nexport default Nav","import { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction chillHop() {\r\n  return [\r\n    {\r\n      name: \"Beaver Creek\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: true,\r\n    },\r\n    {\r\n      name: \"Daylight\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Keep Going\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Nightfall\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Reflection\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Under the City Stars\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    //ADD MORE HERE\r\n  ];\r\n}\r\n\r\nexport default chillHop;","import { useState, useRef } from \"react\"\n\n// import syles\nimport \"./styles/app.scss\"\n\n// Adding components\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport Library from \"./components/Library\"\nimport Nav from \"./components/Nav\"\n// Import Data\nimport data from \"./data\"\n\nfunction App() {\n  // Ref\n  const audioRef = useRef(null);\n  // State\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n  });\n  const [libraryStatus, setLibraryStatus] = useState(false);\n  \n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    // calculate Percentage\n    const roundedCurrent = Math.round(current);\n    const roundedDuration = Math.round(duration);\n    const animation = Math.round((roundedCurrent / roundedDuration) * 100);\n\n    setSongInfo({...songInfo, currentTime: current, duration, animationPercentage: animation })\n };\n \n const songEndHandler = async () => {\n  let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n  await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n  if(isPlaying) audioRef.current.play()\n }\n\n\n  return (\n    <div className={`App ${libraryStatus ? \"library-active\" : \"\"}`}>\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus}/>\n      < Song currentSong={currentSong} isPlaying={isPlaying} />\n      < Player\n      audioRef={audioRef}\n      isPlaying={isPlaying}\n      setIsPlaying={setIsPlaying} \n      currentSong={currentSong}\n      setSongInfo={setSongInfo}\n      songInfo={songInfo}\n      songs={songs}\n      setCurrentSong={setCurrentSong}\n      setSongs={setSongs}\n      />\n      <Library \n      audioRef={audioRef} \n      songs={songs} \n      setCurrentSong={setCurrentSong}\n      isPlaying={isPlaying} \n      setSongs={setSongs}\n      libraryStatus={libraryStatus}\n      />\n      <audio \n           onTimeUpdate={timeUpdateHandler} \n           onLoadedMetadata={timeUpdateHandler}\n           ref={audioRef} \n           src={currentSong.audio}\n           onEnded={songEndHandler}\n           ></audio>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}